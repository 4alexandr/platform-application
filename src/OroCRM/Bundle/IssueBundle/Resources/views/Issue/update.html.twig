{% extends 'OroUIBundle:actions:update.html.twig' %}
{% form_theme form with ['OroFormBundle:Form:fields.html.twig', 'OroTagBundle:Form:fields.html.twig'] %}

{% oro_title_set({params : {"%entity.summary%": entity.summary, "%entityName%": 'orocrm.issue.entity_label'|trans }}) %}

{% block navButtons %}
    {% set html = UI.saveAndCloseButton() %}
    {% set html = html ~ UI.saveAndStayButton() %}
    {{ UI.dropdownSaveButton({'html': html}) }}
    {{ UI.cancelButton(path('orocrm_issue_index')) }}
{% endblock navButtons %}

{% block stats %}
    {% if entity.id %}
        {{ parent() }}
    {% endif %}
{% endblock stats %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity': entity,
        'indexPath': path('orocrm_issue_index'),
        'indexLabel': 'orocrm.issue.entity_plural_label'|trans,
        'entityTitle': entity.id ? entity.summary : 'oro.ui.create_entity'|trans({'%entityName%': 'orocrm.issue.entity_label'|trans})
    } %}
    {% if entity.parent %}
        {% set breadcrumbs = breadcrumbs|merge({
            additional: [
                {
                    'indexPath': path('orocrm_issue_view', {id: entity.parent.id}),
                    'indexLabel': entity.parent.summary,
                }
            ]
        }) %}
    {% endif %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'issue-form' %}

    {% set dataBlocks = [{
        'title': 'General Information'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': '',
                'data': [
                    form_row(form.code),
                    form_row(form.summary),
                    form.type is defined ? form_row(form.type) : '',
                    form_row(form.description),
                    form_row(form.priority),
                    form_row(form.resolution),
                    form.owner is defined ? form_row(form.owner) : '',
                    form.reporter is defined ? form_row(form.reporter) : '',
                    form_row(form.tags),
                    form_row(form.related_issues),
                ]
            }
        ]
    }] %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Additional'|trans,
            'subblocks': [{
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
